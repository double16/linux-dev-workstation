{
  "_comment": "Image that uses Packer to build Vagrant boxes.",
  "builders": [
    {
      "type": "azure-arm",

      "client_id": "{{ user `azure_client_id` }}",
      "client_secret": "{{ user `azure_client_secret` }}",
      "subscription_id": "{{ user `azure_subscription_id` }}",
      "tenant_id": "{{ user `azure_tenant_id` }}",

      "managed_image_resource_group_name": "{{ user `azure_resource_group` }}",
      "managed_image_name": "packer-{{ timestamp }}",

      "os_type": "Linux",
      "image_publisher": "OpenLogic",
      "image_offer": "CentOS",
      "image_sku": "7.6",

      "azure_tags": {
        "dept": "engineering",
        "task": "packer image building"
      },

      "ssh_pty": "true",
      "location": "West US",
      "vm_size": "Standard_D2S_v3",
      "os_disk_size_gb": "200"
    },
    {
      "type": "docker",
      "image": "pdouble16/fedora-ssh:30",
      "run_command": ["-d", "-i", "-t", "-e", "SSH_USER=vagrant", "--", "{{.Image}}"],
      "commit": true,
      "changes": [
        "LABEL maintainer='Patrick Double <pat@patdouble.com>' org.label-schema.license='MPL-2.0' org.label-schema.vendor='https://bitbucket.org/double16' org.label-schema.name='Packer' org.label-schema.url='https://bitbucket.org/double16/linux-dev-workstation/builder' org.label-schema.url='https://bitbucket.org/double16/linux-dev-workstation.git'",
        "ENV SSH_USER=vagrant",
        "ENTRYPOINT [\"/usr/bin/supervisord\", \"--configuration=/etc/supervisord.conf\"]"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "vagrant-upload.sh",
      "destination": "/tmp/vagrant-upload.sh"
    },
    {
      "environment_vars": [
        "http_proxy={{user `http_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "ftp_proxy={{user `ftp_proxy`}}",
        "rsync_proxy={{user `rsync_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "yum_proxy={{user `yum_proxy`}}"
      ],
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
      "inline": [
        "set -x -e",

        "while ! test -d /home/vagrant; do ps -ef; sleep 5s; done",

        "test -n \"${yum_proxy}\" && echo \"proxy=${yum_proxy}\" >> /etc/dnf/dnf.conf && echo \"--proxy ${yum_proxy}\" >> /root/.curlrc && echo \"--proxy ${yum_proxy}\" >> /home/vagrant/.curlrc",
        "dnf -y install dnf-plugins-core",
        "dnf config-manager -y --add-repo https://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo",
        "dnf config-manager -y --add-repo https://download.docker.com/linux/fedora/docker-ce.repo",
        "rpm --import https://www.virtualbox.org/download/oracle_vbox.asc",
        "rpm --import https://download.docker.com/linux/fedora/gpg",
        "sed -i 's/repo_gpgcheck=1/repo_gpgcheck=0/' /etc/yum.repos.d/*",
        "dnf upgrade -y",
        "dnf group install -y 'Development Tools'",
        "dnf install -y kernel-devel kernel-devel-$(uname -r) unzip git screen tmux htop qemu qemu-kvm ruby awscli iftop jq php curl device-mapper-persistent-data lvm2 docker-ce libvirt-devel apt-cacher-ng coreutils which zsh zsh-syntax-highlighting",
        "dnf install -y VirtualBox-6.0",
        "test -n \"${yum_proxy}\" && mkdir -p /etc/systemd/system/docker.service.d && echo -e \"[Service]\nEnvironment=\\\"HTTP_PROXY=${yum_proxy}\\\"\nEnvironment=\\\"HTTPS_PROXY=${yum_proxy}\\\"\nEnvironment=\\\"NO_PROXY=127.0.0.1,localhost\\\"\" > /etc/systemd/system/docker.service.d/http-proxy.conf && systemctl daemon-reload",
        "systemctl enable docker",

        "/bin/grep -q '^vagrant:' /etc/group || /usr/sbin/groupadd vagrant",
        "/bin/grep -q '^wheel:' /etc/group || /usr/sbin/groupadd wheel",
        "/bin/grep -q '^vagrant:' /etc/passwd || /usr/sbin/useradd vagrant -m -g vagrant -G wheel,kvm,docker,vboxusers",
        "/bin/grep -q '^docker:.*vagrant' /etc/group || /usr/sbin/usermod vagrant -G wheel,kvm,docker,vboxusers",
        "sed -i 's|/home/vagrant:/bin/bash|/home/vagrant:/bin/zsh|' /etc/passwd",

        "test -d /home/vagrant/.oh-my-zsh || su -c 'git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh' - vagrant",
        "grep -q ZSH_THEME /home/vagrant/.zshrc || su -c 'cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc' - vagrant",
        "/usr/bin/sed -i 's/ZSH_THEME=.*/ZSH_THEME=\"agnoster\"/' /home/vagrant/.zshrc",
        "/usr/bin/sed -i 's/plugins=.*/plugins=(git vagrant tmux docker docker-compose go golang)/' /home/vagrant/.zshrc",

        "curl -sL --fail -o /tmp/packer.zip https://releases.hashicorp.com/packer/1.4.5/packer_1.4.5_linux_amd64.zip",
        "cd /usr/bin && unzip -o /tmp/packer.zip && chmod +x /usr/bin/packer",
        "rm /tmp/packer.zip",
        "test -n \"${yum_proxy}\" && echo \"export yum_proxy=${yum_proxy}\" >> /home/vagrant/.bashrc && echo \"export YUM_PROXY=${yum_proxy}\" >> /home/vagrant/.bashrc && echo \"export VAGRANT_CLOUD_TOKEN=\" >> /home/vagrant/.bashrc && chown vagrant:vagrant /home/vagrant/.bashrc",

        "curl -sL -o /tmp/vagrant_2.2.6_x86_64.rpm https://releases.hashicorp.com/vagrant/2.2.6/vagrant_2.2.6_x86_64.rpm",
        "rpm -i /tmp/vagrant_2.2.6_x86_64.rpm",
        "rm /tmp/vagrant_2.2.6_x86_64.rpm",
        "su -c 'vagrant plugin install vagrant-cachier vagrant-vbguest vagrant-azure vagrant-aws' - vagrant",

        "su -c 'curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | zsh' - vagrant",

        "test -f /tmp/vagrant-upload.sh && mv /tmp/vagrant-upload.sh /home/vagrant/vagrant-upload.sh",
        "test -f /vagrant/vagrant-upload.sh && cp /vagrant/vagrant-upload.sh /home/vagrant/vagrant-upload.sh",
        "test -f /vagrant/builder/vagrant-upload.sh && cp /vagrant/builder/vagrant-upload.sh /home/vagrant/vagrant-upload.sh",
        "chown vagrant:vagrant /home/vagrant/vagrant-upload.sh",
        "chmod +x /home/vagrant/vagrant-upload.sh",

        "if [ -f /usr/sbin/waagent ]; then /usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync; fi"
      ],
      "inline_shebang": "/bin/bash",
      "type": "shell",
      "skip_clean": true
    }
  ],
  "post-processors": [
    [
      {
        "keep_input_artifact": false,
        "output": "box/{{.Provider}}/packer-{{user `version`}}.box",
        "type": "vagrant"
      },
      {
        "keep_input_artifact": true,
        "type": "vagrant-cloud",
        "box_tag": "double16/packer",
        "access_token": "{{user `cloud_token`}}",
        "version": "{{user `version`}}",
        "no_release": "{{ user `no_release` }}"
      }
    ]
  ],
  "variables": {
    "ftp_proxy": "{{env `ftp_proxy`}}",
    "http_proxy": "{{env `http_proxy`}}",
    "https_proxy": "{{env `https_proxy`}}",
    "no_proxy": "{{env `no_proxy`}}",
    "yum_proxy": "{{env `yum_proxy`}}",
    "version": "{{ timestamp }}",
    "no_release": "true",
    "rsync_proxy": "{{env `rsync_proxy`}}",
    "cloud_token": "{{ env `VAGRANT_CLOUD_TOKEN` }}",
    "azure_client_id": "{{ env `AZURE_CLIENT_ID` }}",
    "azure_client_secret": "{{ env `AZURE_CLIENT_SECRET` }}",
    "azure_subscription_id": "{{ env `AZURE_SUBSCRIPTION_ID` }}",
    "azure_tenant_id": "{{ env `AZURE_TENANT_ID` }}",
    "azure_resource_group": "packer"
  }
}
