# Fedora 33 Workstation kickstart file
# vim: syntax=kickstart
#
# For more information on kickstart syntax and commands, refer to the
# Fedora Installation Guide:
# https://docs.fedoraproject.org/f30/install-guide/appendixes/Kickstart_Syntax_Reference.html#appe-kickstart-syntax-reference
# Or:
# http://pykickstart.readthedocs.io/en/latest/kickstart-docs.html#chapter-2-kickstart-commands-in-fedora

#
# For testing, you can fire up a local http server temporarily.
# cd to the directory where this ks.cfg file resides and run the following:
#    $ python -m SimpleHTTPServer
# You don't have to restart the server every time you make changes.  Python
# will reload the file from disk every time.  As long as you save your changes
# they will be reflected in the next HTTP download.  Then to test with
# a PXE boot server, enter the following on the PXE boot prompt:
#    > linux text ks=http://<your_ip>:8000/ks.cfg

# Required settings
lang en_US.UTF-8
keyboard us
rootpw vagrant
authconfig --enableshadow --enablemd5
timezone UTC
eula --agreed

# Optional settings
install
cdrom
# use a Fedora mirror for the install source
#url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch --proxy=http://169.254.169.254:3142/
#url --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch
network --bootproto=dhcp
selinux --disabled
firewall --disabled

# Avoiding warning message on Storage device breaking automated generation
zerombr

# Remove all existing partitions
clearpart --all --initlabel

# autopart --type=btrfs
# Unless there is a /tmp partition, /tmp is on tmpfs which causes the build to fail
part /boot  --fstype=ext4 --size=256 --maxsize=512 --grow
part swap   --fstype=swap --size=500 --maxsize=2000 --grow
part btrfs.01 --fstype=btrfs --grow --label=fedora
btrfs none --label=fedora btrfs.01
btrfs /     --subvol --name=root   fedora
btrfs /tmp  --subvol --name=tmp    fedora

# Reboot After Installation
reboot --eject

%packages
@core
@hardware-support
@networkmanager-submodules
@standard
grubby

# Prerequisites for installing VMware Tools or VirtualBox guest additions.
bzip2
curl
deltarpm
kernel-devel
kernel-headers
#make
net-tools
nfs-utils
rsync
sudo
tar
wget

# vagrant needs this to copy initial files via scp
openssh-clients

# Packages from Puppet, here to speed up building since we can pull from the install disk
bind-utils
cifs-utils
dos2unix
libsecret
lsof
man-pages
mlocate
nmap-ncat
psmisc
rsync
tcpdump
tmux
tree
unzip
# End Puppet packages

%end

%post
# Add Vagrant user and group.
/usr/sbin/groupadd vagrant
/usr/sbin/useradd vagrant -g vagrant
echo "vagrant"|passwd --stdin vagrant

# Give Vagrant user permission to sudo.
echo 'Defaults:vagrant !requiretty' > /etc/sudoers.d/vagrant
echo '%vagrant ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/vagrant
chmod 440 /etc/sudoers.d/vagrant

# cgroup1 for k3s v1.0.0
grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"

# Enable SSHd for Packer provisioning
systemctl enable sshd.service

%end
